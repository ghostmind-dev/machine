name: live-push
on:
  push:
    branches:
      - main
      - preview
env:
  SRC: ${{github.workspace}}
  VAULT_ROOT_TOKEN: ${{ secrets.VAULT_ROOT_TOKEN }}
  VAULT_ADDR: ${{ secrets.VAULT_ADDR}}
  GCP_PROJECT_NAME: "${{ secrets.GCP_PROJECT_NAME }}"
  GCP_SERVICE_ACCOUNT_ADMIN : "${{ secrets.GCP_SERVICE_ACCOUNT_ADMIN }}"
  GH_TOKEN: "${{ secrets.GH_TOKEN }}"
  TERRAFORM_BUCKET_NAME": "${{ secrets.TERRAFORM_BUCKET_NAME }}"
  GOOGLE_APPLICATION_CREDENTIALS: "/tmp/gsa_key.json"
  BUILDX_NO_DEFAULT_ATTESTATIONS: "1"
jobs:
  live-push:
    runs-on: ubuntu-latest
    steps:
      - name: run git safe.directory
        if: ${{ github.event.inputs.LOCAL == 'true' }}
        run: git config --global --add safe.directory "*"
      - name: "check github repository"
        uses: actions/checkout@v3
      - name: "install run npm package"
        run: |-
          if [ ${{ github.event.inputs.LIVE }} == true ]; then
            npm install ${SRC}/dev --global
          else
            npm install @ghostmind-dev/run --global
          fi
      - name: Run Instructions Action
        id: detect-files
        uses: ghostmind-dev/detect@main
        with:
          commit-message: ${{ github.event.head_commit.message }}
          possible-instructions: "web,state,all"
          instructions-keyword: "INSTRUCTIONS="
    outputs:
      result: ${{ steps.detect-files.outputs.result }}
  component-state:
    runs-on: ubuntu-latest
    needs: live-push
    if: |-
      ${{ 
        needs.live-push.outputs.result == 'state' || 
        needs.live-push.outputs.result == 'all' 
      }}
    steps:
      - name: run git safe.directory
        if: ${{ github.event.inputs.LOCAL == 'true' }}
        run: git config --global --add safe.directory "*"
      - name: "check github repository"
        uses: actions/checkout@v3
      - name: "install root project npm packages"
        run: npm install
        working-directory: ${{github.workspace}}
      - name: "install run npm package"
        run: |-
          if [ ${{ github.event.inputs.LIVE }} == true ]; then
            npm run build
            npm install dev --global
          else
            npm install @ghostmind-dev/run --global
          fi
        working-directory: ${{github.workspace}}
      - name: set environment
        run: |-
          run action env set
      - name: "install vault cmd"
        run: |-
          sudo apt install -y gpg
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg >/dev/null
          gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install --reinstall -y vault
          sudo chown root:root /usr/bin/vault
      - name: "login to vault"
        env:
          VAULT_ROOT_TOKEN: ${{ secrets.VAULT_ROOT_TOKEN }}
          VAULT_ADDR: ${{ secrets.VAULT_ADDR}}
        run: |-
          vault login "$VAULT_ROOT_TOKEN" -address="$VAULT_ADDR" -non-interactive=true
      - name: "set global secrets"
        id: global-secrets
        working-directory: ${{github.workspace}}
        run: run action secrets set
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          install_components: "kubectl,kustomize"
      - name: "set up gcloud credentials"
        run: |-
          echo ${GCP_SERVICE_ACCOUNT_ADMIN} | base64 -di -w 0 >/tmp/gsa_key.json
          gcloud auth activate-service-account --key-file="/tmp/gsa_key.json"
          gcloud config set project $GCP_PROJECT_NAME
          gcloud config set compute/zone us-central1-b
          gcloud auth configure-docker gcr.io --quiet
      - name: "terraform installation"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7
      - name: "authenticate gcr.io to docker"
        run: |-
          gcloud --quiet auth configure-docker gcr.io --quiet
      - name: install hasurs
        run: |-
          curl -L https://github.com/hasura/graphql-engine/raw/stable/cli/get.sh | bash
      - name: "deploy app"
        working-directory: "${{github.workspace}}/app/state"
        run: |-
          run action secrets set
          run custom init